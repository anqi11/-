#include<iostream> 
using namespace std;
bool CheckString(string s1,int place)//递归法
{
int len = s1.length();
if (place <= len / 2)
{
return true;
}
else if (s1[place] != s1[len - place-1])
{
return false;
}
else
{
return CheckString(s1, place - 1);
}
}
bool CheckString2(string s1)//递推法
{
int len = s1.length();
int place = s1.length()-1;
while (place > len / 2)
{
if (s1[place] != s1[len - place - 1])
{
return false;
}
--place;
}
return true;
}
int main()
{
string a[50] = {"absd","aavvaa","aacrea","aebbaa","acddca"};
for (int i = 0; i < 5; i++)
{
if (CheckString(a[i], a[i].length() - 1))
{
cout << a[i] << " is a palindrome" << endl;
}
else
{
cout << a[i] << " is not a palindrome" << endl;
}
}
cout << endl << endl;
for (int i = 0; i < 5; i++)
{    if (CheckString2(a[i]))
    {      cout << a[i] << " is a palindrome" << endl;
    }    else
    {      cout << a[i] << " is not a palindrome" << endl;
    }
}return 0;
}
